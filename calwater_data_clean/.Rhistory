print('hello world')
print('hello world')
library(ggplot2)
library(dplyr)
library(cowplot)
library(raster)
library(conflicted)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
library(rgeos)
library(rgdal)
### Question 2
beta0 = 2
beta1 = 5
sigma2 = 4
sigma = sqrt(sigma2)
X = rnorm(100)
n = length(X)
# Create one dataset.
epsilon = rnorm(n) # sample errors~N(0, sigma^2)
Y = beta0 + beta1 * X + epsilon
plot(X, Y, pch=20, cex=2)
abline(lm(Y ~ X), col="blue") # Sample
abline(beta0, beta1, col="red") # Population
model = lm(Y ~ X)
s2 = (summary(model)$sigma)^2
summary(model)
coef(model)
### 2b
num_repetitions <- 1000
slope_coefficients <- numeric(num_repetitions)
slope_error <- numeric(num_repetitions)
for (i in 1:num_repetitions) {
noise <- rnorm(length(X))
Y <- beta1 * X + noise
model <- lm(Y ~ X)
slope_coefficients[i] <- coef(model)[2]
slope_error[i] <- (summary(model)$sigma)
}
hist(slope_coefficients, main="Histogram of b1 Estimates",
xlab="b1 Estimates", col=rgb(1,0,0,0.5))
### C
test_stat <- (slope_coefficients - beta1) / slope_error
nag = nrow(test_stat)
xnorm <- seq(-0.3, 0.3, length=1000)
ynorm <- dnorm(xnorm, mean=0, sd=0.1) #sapply(xnorm, function(i) dt(i, df=nag-2)) #
de <- density(test_stat)
histcomp <- plot(de, col="blue", lwd=3, main="Standardized vs. Normal Distribution")
histcomp <- lines(xnorm, ynorm, col="red", lwd=3)
histcomp <- legend(-0.35, 4, legend=c("Standardized", "Normal"),
fill = c("blue","red")
)
### Question 3
### A
housing = read.csv("AmesHousing.csv")
### Question 2
beta0 = 2
beta1 = 5
sigma2 = 4
sigma = sqrt(sigma2)
X = rnorm(100)
n = length(X)
# Create one dataset.
epsilon = rnorm(n) # sample errors~N(0, sigma^2)
Y = beta0 + beta1 * X + epsilon
plot(X, Y, pch=20, cex=2)
abline(lm(Y ~ X), col="blue") # Sample
abline(beta0, beta1, col="red") # Population
model = lm(Y ~ X)
s2 = (summary(model)$sigma)^2
summary(model)
coef(model)
### Question 2
beta0 = 2
beta1 = 5
sigma2 = 4
sigma = sqrt(sigma2)
X = rnorm(100)
n = length(X)
# Create one dataset.
epsilon = rnorm(n) # sample errors~N(0, sigma^2)
Y = beta0 + beta1 * X + epsilon
plot(X, Y, pch=20, cex=2)
abline(lm(Y ~ X), col="blue") # Sample
abline(beta0, beta1, col="red") # Population
model = lm(Y ~ X)
s2 = (summary(model)$sigma)^2
summary(model)
coef(model)
s2
(summary(model)$sigma)
summary(model)
setwd("C:/Users/sstei/OneDrive/steiner_research/calwater_project/calwater_data_clean")
#library(viridis)
library(ggplot2)
#library(ggplot)
library(dplyr)
library(cowplot)
library(raster)
library(conflicted)
#install.packages("pracma")
library(car)
library(nnet)
library(pracma)
library(sandwich)
library(lmtest)
library(rgeos)
library(rgdal)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
op_path = "C:/Users/sstei/OneDrive/steiner_research/calwater_project/calwater_output/final_project41100"
#######
calwater = read.csv("calwater_data_shortage.csv")
head(calwater)
calwater$owner <- factor(calwater$owner, levels=1:3, labels=c("For-Profit", "Public", "Mutual"))
calwater$date <- as.Date(calwater$date)
calwater$year <- as.numeric(format(calwater$date, "%Y"))
#calwater$year <- calwater$date
### Seasonality
calwater_seas <- calwater[, c("date", "owner", "tot_waterprod_exclag", "ag_calc_waterprod")] %>% group_by(date, owner)
calwater_seas$total_water <- calwater_seas$tot_waterprod_exclag + calwater_seas$ag_calc_waterprod
calwater_seas <- calwater_seas %>% summarize(sum_water = sum(tot_waterprod_exclag))
calwater_seas$sum_water = calwater_seas$sum_water / 1000000000
sumwater <- ggplot(calwater_seas, aes(x = date, y = sum_water, group = owner, color = owner)) +
geom_line() +
geom_point() +
labs(title = "Non-Agricultural Water Consumption by Owner Group", x = "Date", y = "Consumption (billions of gallons)") +
theme_minimal() +
scale_y_continuous(breaks = seq(0, 220, by = 20))
ggsave(paste(op_path, "line_sumwater.png", sep="/"), plot = sumwater, width = 6, height = 3, units = "in")
calwater_seas
head(calwater)
### Seasonality
calwater_seas <- calwater[, c("date", "owner", "tot_waterprod_exclag", "ag_calc_waterprod")] %>% group_by(date, owner)
calwater_seas$total_water <- calwater_seas$tot_waterprod_exclag + calwater_seas$ag_calc_waterprod
calwater_seas <- calwater_seas %>% summarize(sum_water = sum(tot_waterprod_exclag))
calwater_seas$sum_water = calwater_seas$sum_water / 1000000000
sumwater <- ggplot(calwater_seas, aes(x = date, y = sum_water, group = owner, color = owner)) +
geom_line() +
geom_point() +
labs(title = "Non-Agricultural Water Consumption by Owner Group", x = "Date", y = "Consumption (billions of gallons)") +
theme_minimal() +
scale_y_continuous(breaks = seq(0, 220, by = 20))
ggsave(paste(op_path, "line_sumwater.png", sep="/"), plot = sumwater, width = 6, height = 3, units = "in")
calwater_seas
### For-Profit vs. Public
county_list = table(calwater$county, calwater$owner)
### Modeling
head(calwater)
calwater_mod <- calwater[, c("year", "month", "supplier_name2", "owner", "hydrologic_region", "county", "crisis", "population", "calculated_r_gpcd", "log_gpcd", "ag_calc_waterprod", "share_resid", "short_clean2")]  #%>% group_by(year, supplier_name2, month, owner, county, crisis)
calwater_mod <- calwater_mod %>% filter((county == "Los Angeles" | county=="Kern" | county=="Sacramento") & hydrologic_region != "South Lahontan")
# So low that it must be measurement error or some exogenous event
calwater_mod <- calwater_mod %>% filter((supplier_name2!="california city city of") | (supplier_name2 == "california city city of" & calculated_r_gpcd>15))
unique(calwater_mod$county)
calwater_mod$share_resid <- calwater_mod$share_resid * 100
head(calwater_mod)
calwater_mod$month <- factor(calwater_mod$month)
#calwater_mod$year <- factor(calwater_mod$year)
par(mfrow=c(1, 1))
calwater_mod$log_pop = log(calwater_mod$population)
kde_gpcd <- ggplot(calwater_mod, aes(x = calculated_r_gpcd, fill = owner)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plot by Group", x = "GPCD", y = "Density") +
theme_minimal()
ggsave(paste(op_path, "kde_gpcd.png", sep="/"), plot=kde_gpcd, width=6, height=3, units="in")
tab_supptotal = distinct(calwater_mod[, c("hydrologic_region", "supplier_name2")])
tab_supptotal
tab_supptotal = distinct(calwater_mod[, c("hydrologic_region", "Owner", "supplier_name2")])
tab_supptotal = distinct(calwater_mod[, c("hydrologic_region", "owner", "supplier_name2")])
tab_supptotal
tab_supptotal = tab_supptotal %>%
group_by(c(hydrologic_region, owner)) %>%
count()
tab_supptotal = tab_supptotal %>%
group_by(hydrologic_region, owner) %>%
count()
tab_supptotal
### Crisis
calwater_mod2 = calwater_mod %>% filter(short_clean2==2)
model = lm(log_gpcd ~ owner * hydrologic_region + share_resid + crisis + disaster + summer + may + october + year, data=calwater_mod)
### Modeling
head(calwater)
calwater_mod <- calwater[, c("year", "month", "supplier_name2", "owner", "hydrologic_region", "county", "crisis", "population", "calculated_r_gpcd", "log_gpcd", "ag_calc_waterprod", "share_resid", "short_clean2")]  #%>% group_by(year, supplier_name2, month, owner, county, crisis)
calwater_mod <- calwater_mod %>% filter((county == "Los Angeles" | county=="Kern" | county=="Sacramento") & hydrologic_region != "South Lahontan")
# So low that it must be measurement error or some exogenous event
calwater_mod <- calwater_mod %>% filter((supplier_name2!="california city city of") | (supplier_name2 == "california city city of" & calculated_r_gpcd>15))
unique(calwater_mod$county)
tab_supptotal = distinct(calwater_mod[, c("hydrologic_region", "owner", "supplier_name2")])
tab_supptotal = tab_supptotal %>%
group_by(hydrologic_region, owner) %>%
count()
tab_supptotal
calwater_mod$share_resid <- calwater_mod$share_resid * 100
head(calwater_mod)
calwater_mod$month <- factor(calwater_mod$month)
#calwater_mod$year <- factor(calwater_mod$year)
par(mfrow=c(1, 1))
calwater_mod$log_pop = log(calwater_mod$population)
kde_gpcd <- ggplot(calwater_mod, aes(x = calculated_r_gpcd, fill = owner)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plot by Group", x = "GPCD", y = "Density") +
theme_minimal()
ggsave(paste(op_path, "kde_gpcd.png", sep="/"), plot=kde_gpcd, width=6, height=3, units="in")
kde_gpcd <- ggplot(calwater_mod, aes(x = log_gpcd, fill = owner)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plot by Group", x = "log(GPCD)", y = "Density") +
theme_minimal()
ggsave(paste(op_path, "kde_loggpcd.png", sep="/"), plot=kde_gpcd, width=6, height=3, units="in")
kde_logpop <- ggplot(calwater_mod, aes(x = log_pop, fill = owner)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plot by Group", x = "log(Population)", y = "Density") +
theme_minimal()
ggsave(paste(op_path, "kde_logpop.png", sep="/"), plot=kde_logpop, width=6, height=3, units="in")
kde_logpop <- ggplot(calwater_mod, aes(x = log_pop, fill = county)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plot by Group", x = "log(Population)", y = "Density") +
theme_minimal()
ggsave(paste(op_path, "kde_logpop_hydro.png", sep="/"), plot=kde_logpop, width=6, height=3, units="in")
boxplot(calwater_mod$log_gpcd ~ calwater_mod$owner, main="log(GPCD) ~ Ownership", ylab="log(GPCD)", xlab="Ownership")
dev.print(png, file=paste(op_path, "box_loggpcdVowner.png", sep="/"), width=870, height=615, units="px")
boxplot(calwater_mod$log_gpcd ~ calwater_mod$hydrologic_region, main="log(GPCD) ~ Hydrologic Region", ylab="log(GPCD)", xlab="Hydrologic Region")
dev.print(png, file=paste(op_path, "box_loggpcdVhydro.png", sep="/"), width=870, height=615, units="px")
boxplot(calwater_mod$log_gpcd ~ calwater_mod$month, main="log(GPCD) ~ Months", ylab="log(GPCD)", xlab="Months")
dev.print(png, file=paste(op_path, "box_loggpcdVmonth.png", sep="/"), width=870, height=615, units="px")
calwater_mod$summer <- ifelse(calwater_mod$month %in% c(6,7,8,9), 1, 0)
calwater_mod$may <- ifelse(calwater_mod$month %in% c(5), 1, 0)
calwater_mod$october <- ifelse(calwater_mod$month %in% c(10), 1, 0)
calwater_mod$disaster <- ifelse(calwater_mod$short_clean2>3, 1, 0)
calwater_mod$crisis <- ifelse(calwater_mod$short_clean2 %in% c(2,3), 1, 0)
boxplot(calwater_mod$log_gpcd ~ calwater_mod$year, main="log(GPCD) ~ Year", ylab="log(GPCD)", xlab="Year")
dev.print(png, file=paste(op_path, "box_loggpcdVyear.png", sep="/"), width=870, height=615, units="px")
boxplot(calwater_mod$log_gpcd ~ calwater_mod$short_clean2, main="log(GPCD) ~ Shortage Stage", ylab="log(GPCD)", xlab="Shortage Stage")
dev.print(png, file=paste(op_path, "box_loggpcdVstage.png", sep="/"), width=870, height=615, units="px")
boxplot(calwater_mod$share_resid ~ calwater_mod$owner, main="Share Residential ~ Owner", ylab="Share Resid", xlab="Owner")
dev.print(png, file=paste(op_path, "box_residVowner.png", sep="/"), width=870, height=615, units="px")
table(calwater_mod$hydrologic_region, calwater_mod$short_clean2)
num_quantiles <- 3
# Use the cut function to create bins based on quantiles
bin_qtiles= quantile(calwater_mod$population, probs = seq(0, 1, 1/num_quantiles), na.rm = TRUE)
calwater_mod$pop_bins <- cut(calwater_mod$population, breaks = bin_qtiles, include.lowest = TRUE)
model = lm(log_gpcd ~ owner * hydrologic_region + share_resid + crisis + disaster + summer + may + october + year, data=calwater_mod)
robust_se <- coeftest(model, vcov = sandwich, cluster = C("supplier_name2"))
robust_se
AIC(robust_se)
### Crisis
calwater_mod2 = calwater_mod %>% filter(short_clean2==2)
model2 = lm(log_gpcd ~ owner * hydrologic_region + share_resid + summer + may + october + year, data=calwater_mod2)
robust_se2 <- coeftest(model2, vcov = sandwich, cluster = C("supplier_name2"))
robust_se2
AIC(robust_se2)
vif(model2)
### Crisis
calwater_mod2 = calwater_mod %>% filter(short_clean2 %in% c(1,2))
model2 = lm(log_gpcd ~ owner * hydrologic_region + share_resid + summer + may + october + year, data=calwater_mod2)
robust_se2 <- coeftest(model2, vcov = sandwich, cluster = C("supplier_name2"))
robust_se2
AIC(robust_se2)
calwater_mod$disaster <- ifelse(calwater_mod$short_clean2>3, 1, 0)
calwater_mod$crisis <- ifelse(calwater_mod$short_clean2 %in% c(2,3), 1, 0)
calwater_mod$mild <- ifelse(calwater_mod$short_clean2==1, 1, 0)
model = lm(log_gpcd ~ owner * hydrologic_region + share_resid + mild + crisis + disaster + summer + may + october + year, data=calwater_mod)
robust_se <- coeftest(model, vcov = sandwich, cluster = C("supplier_name2"))
robust_se
AIC(robust_se)
par(mfrow=c(2, 2), mar = c(4, 4, 2, 2))
plot(model, pch=16, col="black")
mtext("OLS Model Diagnostics", line = 0.5, outer = TRUE, cex = 1.5)
dev.print(png, file=paste(op_path, "diag_olsmod.png", sep="/"), width=870, height=615, units="px")
vif(model)
table(calwater_mod$month, calwater_mod$crisis)
table(calwater_mod$year, calwater_mod$crisis)
calwater_mod$bigshort <- ifelse(calwater_mod$short_clean2>0, 0, 1)
crisis_fit <- glm(bigshort ~ owner * hydrologic_region + share_resid + year, data=calwater_mod, family="binomial")
robust_glmse <- coeftest(crisis_fit, vcov = sandwich, cluster = C("supplier_name2"))
robust_glmse
summary(crisis_fit)
robust_glmse <- coeftest(crisis_fit, vcov = sandwich, cluster = C("supplier_name2"))
robust_glmse
summary(crisis_fit)
crisis_fit <- glm(bigshort ~ owner * hydrologic_region + share_resid, data=calwater_mod, family="binomial")
robust_glmse <- coeftest(crisis_fit, vcov = sandwich, cluster = C("supplier_name2"))
robust_glmse
calwater_mod$bigshort <- ifelse(calwater_mod$short_clean2>1, 0, 1)
crisis_fit <- glm(bigshort ~ owner * hydrologic_region + share_resid + year, data=calwater_mod, family="binomial")
robust_glmse <- coeftest(crisis_fit, vcov = sandwich, cluster = C("supplier_name2"))
robust_glmse
summary(crisis_fit)
model = lm(log_gpcd ~ owner * hydrologic_region + share_resid + disaster + summer + may + october + year, data=calwater_mod)
robust_se <- coeftest(model, vcov = sandwich, cluster = C("supplier_name2"))
robust_se
AIC(robust_se)
vif(model)
par(mfrow=c(2, 2), mar = c(4, 4, 2, 2))
plot(model, pch=16, col="black")
mtext("OLS Model Diagnostics", line = 0.5, outer = TRUE, cex = 1.5)
dev.print(png, file=paste(op_path, "diag_olsmod.png", sep="/"), width=870, height=615, units="px")
calwater_mod %>% filter(short_clean2>3)
disaster_supp = calwater_mod %>% filter(supplier_name2 %in% c("beverly hills city of", "cerritos city of", "crescenta valley water district", "el monte city of", "arvin community services district"))
summary(disaster_supp)
other_supp = calwater_mod %>% filter(supplier_name2 %in% c("beverly hills city of", "cerritos city of", "crescenta valley water district", "el monte city of", "arvin community services district"))
summary(disaster_supp)
summary(other_supp)
summary(other_supp)
summary(disaster_supp)
other_supp = calwater_mod %>% filter(supplier_name2 %in% c("beverly hills city of", "cerritos city of", "crescenta valley water district", "el monte city of", "arvin community services district")==0)
summary(disaster_supp)
summary(other_supp)
summary(disaster_supp)
summary(other_supp)
